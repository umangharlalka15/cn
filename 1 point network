Implement the programs using Network Simulator -2
Simulate a point-to-point network with duplex link as follows: n0-n2, n1-n2 and n2-n3. Apply TCP agent between n0-n3 and UDP agent between n1-n3. Apply relevant applications over TCP and UDP agents. Set the queue size to 5 and vary the bandwidth to find number of packets dropped and received by TCP and UDP agents using awk script and grep command.
Solution:	

Aim: To understand and design the point-to-point network structure. Also here we understand the working of TCP and UDP transport protocol.

Save the following program as ex1.tcl

set ns [new Simulator]

set tf [open ex1.tr w]
$ns trace-all $tf

set nf [open ex1.nam w]
$ns namtrace-all $nf

set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]

$ns duplex-link $n0 $n2 2Mb 2ms DropTail
$ns duplex-link $n1 $n2 2Mb 2ms DropTail
$ns duplex-link $n2 $n3 0.4Mb 10ms DropTail
$ns queue-limit $n0 $n2    5  

set udp1 [new Agent/UDP]
$ns attach-agent $n0 $udp1
set null1 [new Agent/Null]
$ns attach-agent $n3 $null1
$ns connect $udp1 $null1
set cbr1 [new Application/Traffic/CBR]
$cbr1 attach-agent $udp1
$ns at 1.1 "$cbr1 start"

set tcp [new Agent/TCP]
$ns attach-agent $n3 $tcp
set sink [new Agent/TCPSink]
$ns attach-agent $n1 $sink
$ns connect $tcp $sink
set ftp [new Application/FTP]
$ftp attach-agent $tcp

$ns at 0.1 "$ftp start"

$ns at 10.0 "finish"

proc finish {} {
	global ns tf nf
	$ns flush-trace
	close $tf
	close $nf
	puts "running nam..."
	exec nam ex1.nam &
	exit 0
}

$ns run

Expected output: Animated 4 node structure is displayed. We need to see the trace file to understand what has happened to the data flow.

Grep

grep “^r” ex1.tr       #packets received


To calculate number of packet dropped by TCP and udp we need to write awk script.

Save the below program as ex1.awk
BEGIN {
	tcp_count=0;
	udp_count=0;
}
{
	if ( $1 == "d" && $5 == "tcp")
		tcp_count ++;

       if ( $1 == "d" && $5 == "cbr")
		udp_count ++;
}
END {
printf("Number of packet dropped in TCP      %d\n", tcp_count);	
printf("Number of packet dropped in UDP     %d\n", udp_count);	
}
